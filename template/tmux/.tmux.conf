# ~/.tmux.conf : DO NOT EDIT -- this file has been generated automatically
#
# Ref.: dotfiles/template/tmux/.tmux.conf

###############################################################################
# Look and feel ###############################################################
###############################################################################

# Panes
set -g pane-border-style fg="#<% color.brightblack %>"
set -g pane-active-border-style fg="#<% color.primary_bg %>"

# Start window indexes at 1 to match keyboard
set -g base-index 1
set-window-option -g pane-base-index 1

# keep window names even after command execution
set-option -g allow-rename off

set -g default-terminal "screen-256color"

###############################################################################
# Panel #######################################################################
###############################################################################

set -g status-justify left
set -g status-style bg="#<% color.background %>",fg="#<% color.foreground %>"

set -g status-left ""
set -g status-right "#[dim]#{?client_prefix, C-a,}#{?pane_in_mode, [,}#{?window_zoomed_flag, C-f,}#[nodim] [#(echo $USER)#[fg=<% color.primary_bg_name %>]@#[default]#h#[fg=<% color.primary_bg_name %>]:#[default]#S]#{?client_readonly,[#[fg=red]ro#[default]],}"

# default window title colors
set-window-option -g window-status-style bg="#<% color.background %>",fg="#<% color.foreground %>",dim

# active window title colors
set-window-option -g window-status-current-style bg="#<% color.primary_bg %>",fg="#<% color.primary_fg %>",bright

# message line colors
set -g message-style bg="#<% color.primary_bg %>",fg="#<% color.primary_fg %>",bright

###############################################################################
# Functionalities #############################################################
###############################################################################

# Change prefix to, for some reason, well-estabilished C-a
unbind C-b
set -g prefix C-a  # scbgn:Ctrl+a:prefix mode:scfin
bind -n C-a send-prefix

# Move windows by C-arrow
bind -n C-Left  select-pane -L  # scbgn:Ctrl+Left:focus window on left:scfin
bind -n C-Down  select-pane -D  # scbgn:Ctrl+Down:focus window down:scfin
bind -n C-Up    select-pane -U  # scbgn:Ctrl+Up:focus window up:scfin
bind -n C-Right select-pane -R  # scbgn:Ctrl+Right:focus window on right:scfin

# Resize windows in prefix mode by Ctrl+arrow
# scbgn:Ctrl+a Ctrl+Left:resize window to the left:scfin
bind C-Left  resize-pane -L 5 \; switch-client -T prefix
# scbgn:Ctrl+a Ctrl+Up:resize window up:scfin
bind C-Up    resize-pane -U 5 \; switch-client -T prefix
# scbgn:Ctrl+a Ctrl+Down:resize window down:scfin
bind C-Down  resize-pane -D 5 \; switch-client -T prefix
# scbgn:Ctrl+a Ctrl+Right:resize window to the right:scfin
bind C-Right resize-pane -R 5 \; switch-client -T prefix

unbind Left
unbind Right
unbind Up
unbind Down
unbind M-Left
unbind M-Right
unbind M-Up
unbind M-Down

# split panes using | and -
bind -n C-\\ split-window -h  # scbgn:Ctrl+\:split window horizontally:scfin
bind -n C-_ split-window -v  # scbgn:Ctrl+-:split window vertically:scfin
bind C-f resize-pane -Z  # scbgn:Ctrl+a Ctrl+f:toggle window fullscreen:scfin

unbind '"'
unbind %
unbind z

# Manage panes
# scbgn:Ctrl+w:kill window:scfin
bind -n C-w confirm-before -p "kill window? (y/n)" kill-pane \; switch-client -T prefix
unbind x

# Manage windows
bind -n C-t new-window            # scbgn:Ctrl+t:new tab:scfin
bind -n C-PageUp previous-window  # scbgn:Ctrl+PageUp:previous tab:scfin
bind -n C-PageDown next-window    # scbgn:Ctrl+PageDown:next tab:scfin

# scbgn:Ctrl+a Ctrl+l:rename tab:scfin
bind C-l command-prompt -I "#W" "rename-window -- '%%'" \; switch-client -T prefix
# scbgn:Ctrl+a Ctrl+w:close tab:scfin
bind C-w confirm-before -p "close tab? (y/n)" kill-window \; switch-client -T prefix

unbind c  # old new-window
unbind ,  # old rename-window
unbind n  # old next-window
unbind p  # old previous-window

# scbgn:Ctrl+a Shift+;:command prompt:scfin
bind -T prefix : command-prompt \; switch-client -T prefix

# Other
bind -T prefix Escape run 'true'
bind -T copy-mode Escape send-keys -X cancel
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
